{"version":3,"sources":["Screen/splashScreen.module.css","images/signUP.svg","Components/InputField.js","Components/Button.js","core.js","Screen/SignUpScreen.jsx","Screen/SplashScreen.jsx","config/routes.js","images/logIn.svg","Redux/Action/action.js","Screen/LogIn.jsx","Components/DashBoardCmp/EditModal.jsx","Components/DashBoardCmp/CardCmp.jsx","Components/DashBoardCmp/Navbar.js","Components/Switch.js","Screen/DashboardScreen.jsx","Screen/ProfileScreen.jsx","App.jsx","reportWebVitals.js","Redux/Reducer/reducer.js","Redux/Reducer/index.js","Redux/store.js","index.js","Screen/Dashboard.module.css","Components/DashBoardCmp/CardCmp.module.css","Screen/ProfileScreen.module.css"],"names":["module","exports","useStyles","makeStyles","box","width","margin","input","small","color","fontSize","InputTextFeild","label","type","props","useField","field","classes","Box","className","component","noValidate","autoComplete","TextField","variant","name","FormButton","value","addFun","Stack","spacing","direction","Button","style","backgroundColor","onClick","role","BASE_URI","window","location","hostname","split","SignUpScreen","useState","loading","setLoading","isSignUp","setIsSignUp","errorBoxClass","setErrorBoxClass","validate_Schema","Yup","firstName","max","required","lastName","emailAddress","email","password","min","confirmPassword","oneOf","history","useHistory","loginPage","replace","localStorage","getItem","push","src","SignUpImg","alt","initialValues","onSubmit","values","axios","post","then","res","console","log","data","setTimeout","catch","err","signUp","validationSchema","to","SplashScreen","styles","splashScreenBox","PrivateRoute","Component","userData","useSelector","state","LoginReducer","render","SignupAction","dispatch","payload","LoginAction","LogIn","errorMsg","setErrorMsg","useDispatch","validate","LoginPic","withCredentials","status","setItem","JSON","stringify","LoginActions","login","EditModal","placeHolder","editPostFun","indexNum","show","setShow","textValue","setTextValue","errorBorder","setErrorBorder","handleClose","Modal","onHide","Header","closeButton","Title","Body","border","placeholder","id","onChange","e","target","Footer","length","CardCmp","darkTheme","postCap","date","ind","deletePost","ownPost","privatePost","cardMainBox","cardMainBoxDark","cardHeader","borderBottom","iconBOx","borderLeft","padding","cardBody","cardFooter","NavbarApp","icon","changeTheme","Navbar","expand","Brand","href","Toggle","Collapse","Nav","Link","removeItem","inputProps","SwitchesSize","checkHandle","setCheckHandle","Switch","checked","size","DashboardScreen","inputValue","setInputValue","parse","user","setIndexNum","postSend","setPostSend","setIcon","setDarkTheme","loadIsMore","setLoadIsMore","useEffect","a","get","setPost","addPost","postObj","userName","postCapture","Date","toLocaleDateString","userId","_id","editPost","editValue","postKey","uPostId","put","delete","dashBoardMainBox","postSectionBox","postBox","postBoxDark","postCardHeading","postInputBox","cols","rows","postBtns","map","val","loadMoreBtnBox","loadMoreBtn","newPosts","ProfileScreen","profileMainBox","profileBox","userNameHead","userDetails","profilebtns","profilebtnsFC","profilebtnsLC","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","undefined","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6324bec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"splashScreenBox\":\"splashScreen_splashScreenBox__1XHv1\"};","export default __webpack_public_path__ + \"static/media/signUP.eaeca0fe.svg\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {ErrorMessage, useField} from \"formik\";\r\nimport { margin } from '@mui/system';\r\n\r\nconst useStyles = makeStyles({\r\n    box : {\r\n        width : \"100%\",\r\n        // border : \"1px solid lime\",\r\n        margin : \"10px 0\"\r\n    },\r\n    input:{\r\n        width : \"100%\"\r\n    },\r\n    small : {\r\n        color : \"red\",\r\n        fontSize: \"10px\"\r\n    }\r\n})\r\n\r\nexport default function InputTextFeild({label ,type , ...props}) {\r\n    const [field , meta] = useField(props)\r\n    \r\n    const classes  = useStyles()\r\n    return (\r\n    <Box\r\n    className={classes.box}\r\n      component=\"form\"\r\n    //   sx={{\r\n    //     '& > :not(style)': { m: 1, width: '25ch' },\r\n    //   }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n  \r\n      <TextField   type={type} className={classes.input}   {...field} label={label}  variant=\"standard\" />\r\n        <ErrorMessage  className={classes.small} name={field.name} component=\"small\" />\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport default function FormButton({ value ,addFun }) {\r\n  // console.log(value)\r\n  return (\r\n    <Stack spacing={2} direction=\"row\">\r\n      <Button\r\n        style={{ width: \"100%\", backgroundColor: addFun ? \"#52c234\" : \"#09DEEA\" }}\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        onClick={addFun ? ()=>addFun() :null }\r\n        \r\n      >\r\n        {value === true ? (\r\n          <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          value\r\n        )}\r\n      </Button>\r\n    </Stack>\r\n  );\r\n}\r\n","const dev = \"http://localhost:5000\"\r\nexport const BASE_URI = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","import React, { useState } from \"react\";\r\nimport \"./signup.css\";\r\nimport SignUpImg from \"../images/signUP.svg\";\r\nimport InputTextFeild from \"../Components/InputField\";\r\nimport { Formik, Form } from \"formik\";\r\nimport FormButton from \"../Components/Button\";\r\nimport * as Yup from \"yup\";\r\nimport { Link ,useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {BASE_URI} from \"../core\"\r\n\r\nconst SignUpScreen = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n  const [errorBoxClass , setErrorBoxClass ] = useState(\"errorBOx\")\r\n  const validate_Schema = Yup.object({\r\n    firstName: Yup.string()\r\n      .max(15, \"Must be 15 characters or less\")\r\n      .required(\"Required\"),\r\n    lastName: Yup.string()\r\n      .max(15, \"Must be 15 characters or less\")\r\n      .required(\"Required\"),\r\n    emailAddress: Yup.string()\r\n      .email(\"Enter a valid Email\")\r\n      .required(\"Required\"),\r\n    password: Yup.string()\r\n      .min(6, \"Password should be of minimum 8 characters length\")\r\n      .required(\"Required\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"password\"), null], \"Password Must be Match\")\r\n      .required(\"Required\"),\r\n  });\r\n \r\n  \r\n  const signUp = (values) => {\r\n    setLoading(true);\r\n    axios\r\n      .post(`${BASE_URI}/api/v1/signup`, {\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        emailAddress: values.emailAddress,\r\n        password: values.password,\r\n        confirmPassword: values.confirmPassword,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setLoading(false)\r\n        if(res.data === `This Email Address is Already Exist`){\r\n          console.log(res.data)\r\n          setErrorBoxClass(\"errorBOx show\")\r\n          setTimeout(()=>{\r\n          setErrorBoxClass(\"errorBOx\")\r\n\r\n          } , 3000)\r\n        }else{\r\n          \r\n          setIsSignUp(true)\r\n        }\r\n\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n         setLoading(false) });\r\n    console.log(values.firstName);\r\n  };\r\n  const history  = useHistory()\r\n  const loginPage = ()=>{\r\n        history.replace('/')\r\n  }\r\n  if(localStorage.getItem(\"data\")){\r\n    history.push(\"/dashboard\")\r\n  }\r\n  return (\r\n    <div className=\"signUpBox\">\r\n      <h3 className={errorBoxClass}>Email Address is Already Exist</h3>\r\n      <div className=\"signUpImg\">\r\n        <img src={SignUpImg} width=\"100%\" alt=\"\" />\r\n      </div>\r\n\r\n      <div className=\"upFOrmBOx\">\r\n        <h2>\r\n          <span> Sign Up </span> Form\r\n        </h2>\r\n        <Formik\r\n          initialValues={{\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            emailAddress: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n          }}\r\n          onSubmit={(values) => signUp(values)}\r\n          validationSchema={validate_Schema}\r\n        >\r\n          {(values) => (\r\n            <Form>\r\n              <InputTextFeild label=\"First Name\" type=\"text\" name=\"firstName\" />\r\n              <InputTextFeild label=\"Last Name\" type=\"text\" name=\"lastName\" />\r\n              <InputTextFeild\r\n                label=\"Email Address\"\r\n                type=\"text\"\r\n                name=\"emailAddress\"\r\n              />\r\n              <InputTextFeild\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n              />\r\n              <InputTextFeild\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n              />\r\n              <Link to=\"/\">\r\n                <small>Already have an Account? Sign In </small>\r\n              </Link>\r\n\r\n              {!isSignUp ?\r\n              <FormButton value={loading ? true : \"Sign Up\"} /> :\r\n              <FormButton  addFun={loginPage} value={\"User Succesfully Signup\"} />\r\n              }\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpScreen;\r\n","import React from 'react'\r\nimport styles from \"./splashScreen.module.css\"\r\nimport Loading from \"../images/Fountain.gif\"\r\nconst SplashScreen = () => {\r\n    return (\r\n        <div className={styles.splashScreenBox}>\r\n            <img src='https://i.gifer.com/YCZH.gif' alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SplashScreen\r\n","import React from 'react'\r\nimport { Route , Redirect } from 'react-router-dom'\r\nimport {useSelector} from \"react-redux\"\r\nimport SplashScreen from '../Screen/SplashScreen'\r\n\r\n\r\nconst PrivateRoute = ({component:Component , ...rest}) => {\r\n     const userData = useSelector(state => state.LoginReducer)\r\n     console.log(\"private route data\" , userData)\r\n     \r\n     return( \r\n           <Route render={(props)=>{\r\n            return localStorage.getItem(\"data\")?\r\n            <Component {...props} />\r\n             : <Redirect to=\"/\" />  \r\n             \r\n        }} /> \r\n            \r\n        \r\n     )\r\n\r\n}\r\n\r\nexport default PrivateRoute\r\n","export default __webpack_public_path__ + \"static/media/logIn.701cdcf3.svg\";","export const SignupAction = (data)=>{\r\n    return (dispatch)=>{\r\n            dispatch({\r\n                type:\"USER SIGNUP\",\r\n                payload : data\r\n            })\r\n    }\r\n}\r\n\r\nexport const LoginAction = (data)=>{\r\n    // console.log(\"redux data\", data);\r\n    return (dispatch)=>[\r\n\r\n                dispatch({\r\n                    type:\"USER LOGIN\",\r\n                    payload : data\r\n                })\r\n\r\n        ]\r\n}","import React, { useState } from \"react\";\r\nimport \"./login.css\";\r\nimport LoginPic from \"../images/logIn.svg\";\r\nimport { Form, Formik } from \"formik\";\r\nimport InputTextFeild from \"../Components/InputField\";\r\nimport FormButton from \"../Components/Button\";\r\nimport * as Yup from \"yup\";\r\nimport { Link , useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {BASE_URI} from \"../core\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { LoginActions } from \"../Redux\";\r\nconst LogIn = () => {\r\n  // const history = useHistory()\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(null)\r\n  const [errorBoxClass , setErrorBoxClass ] = useState(\"errorBOx\")\r\n  const history =  useHistory() \r\n  const  dispatch = useDispatch()\r\n  const validate = Yup.object({\r\n    emailAddress: Yup.string()\r\n      .required(\"Required\")\r\n      .email(\"Enter a valid Email\"),\r\n    password: Yup.string()\r\n      .required(\"Required\")\r\n      .min(6, \"Password should be of minimum 8 characters length\"),\r\n  });\r\n  if(localStorage.getItem(\"data\")){\r\n    history.push(\"/dashboard\")\r\n  }\r\n\r\n  const login = (values) => {\r\n    // console.log(values);\r\n    setLoading(true)\r\n    axios\r\n      .post(`${BASE_URI}/api/v1/signin`, {\r\n        emailAddress: values.emailAddress,\r\n        password: values.password,\r\n      } , {\r\n        withCredentials : true\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if(res.data.status == \"login successfully\"){\r\n            localStorage.setItem(\"data\",JSON.stringify(res.data.data))\r\n            dispatch(LoginActions.LoginAction(res.data.data))\r\n            history.replace(\"/dashboard\")\r\n\r\n        }else{\r\n            setErrorMsg(res.data)\r\n            setErrorBoxClass(\"errorBOx show\")\r\n            setTimeout(()=>{\r\n              setErrorBoxClass(\"errorBOx\")\r\n    \r\n              } , 3000)\r\n        }\r\n\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <div className=\"loginBox\">\r\n      <h3 className={errorBoxClass}>{errorMsg}</h3>\r\n      <div className=\"LoginPic\">\r\n        <img src={LoginPic} width=\"100%\" alt=\"\" />\r\n      </div>\r\n\r\n      <div className=\"loginForm\">\r\n        <h2>Hello,</h2>\r\n        <h2>Welcome Back</h2>\r\n\r\n        <Formik\r\n          initialValues={{\r\n            emailAddress: \"\",\r\n            password: \"\",\r\n          }}\r\n          onSubmit={(values) => login(values)}\r\n          validationSchema={validate}\r\n        >\r\n          {(values) => (\r\n            <Form>\r\n              <InputTextFeild\r\n                label=\"User Email Address\"\r\n                type=\"email\"\r\n                name=\"emailAddress\"\r\n              />\r\n              <InputTextFeild\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n              />\r\n              <small className=\"forgetDiv\">Forget Password?</small>\r\n              <FormButton value={ loading ? true : \"Login\"} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Link to=\"signup\">\r\n          <small className=\"notAcc\">Don't have An Account? Click Here</small>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","import React, { useState } from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport  \"./EditModal.css\"\r\nconst EditModal = ({placeHolder , editPostFun ,indexNum}) => {\r\n    const [show, setShow] = useState(false);\r\n    const [textValue , setTextValue] = useState(\"\")\r\n    const [errorBorder ,setErrorBorder] = useState(false)\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const saveChange = ()=>{\r\n        if(textValue.length > 3){\r\n            handleClose();\r\n            editPostFun(indexNum , textValue)\r\n        }else{\r\n                setErrorBorder(true)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n        <>\r\n      <button className=\"btn btn-primary\" onClick={handleShow}>\r\n        Edit\r\n      </button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Post Edit</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"p-0\">\r\n            <textarea name=\"\" style={{border :errorBorder ? \"1px solid red\" : \"none\"}} placeholder={placeHolder} id=\"\"\r\n            onChange={e=>setTextValue(e.target.value)}\r\n            className=\"w-100 h-100  modalTextArea\"></textarea>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>saveChange()}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditModal\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./CardCmp.module.css\";\r\nimport { FaUserCircle  , MdPublic , RiGitRepositoryPrivateFill} from \"react-icons/all\";\r\nimport EditModal from \"./EditModal\";\r\nconst CardCmp = ({darkTheme ,name , postCap , date,ind , editPostFun, deletePost , ownPost,privatePost}) => {\r\n    \r\n    return (\r\n    <div className={darkTheme ? `${styles.cardMainBox} ${styles.cardMainBoxDark}` : styles.cardMainBox} >\r\n      \r\n      <section className={styles.cardHeader}\r\n      style={{ borderBottom: darkTheme ? \"2px solid #09DEEA\" :\"2px solid lightgray\"}}\r\n      >\r\n        <div className={styles.iconBOx}>\r\n          <FaUserCircle />\r\n        </div>\r\n        <div style={{borderLeft : darkTheme ?\"1px solid #09DEEA\" : \"1px solid lightgrey\" , padding : \"5px\"}}>\r\n          <p>{name}</p>\r\n          <p>{date} {privatePost ? <RiGitRepositoryPrivateFill /> : <MdPublic /> } </p>\r\n        </div>\r\n      </section>\r\n      <section className={styles.cardBody}\r\n      style={{ borderBottom: darkTheme ? \"2px solid #09DEEA\" :\"2px solid lightgray\"}}\r\n      >\r\n       \r\n        <p>\r\n            {postCap}\r\n        </p> \r\n        \r\n      </section>\r\n      <section className={styles.cardFooter}>\r\n          {/* <button id={ind}  className=\"btn btn-primary\">Edit</button> */}\r\n\r\n          {\r\n              ownPost ? <>\r\n                <EditModal editPostFun={editPostFun} indexNum={ind} placeHolder={postCap} />\r\n                <button id={ind} onClick={(e)=>deletePost(e.target.id)} className=\"btn btn-outline-danger\">DELETE</button>\r\n\r\n              </> \r\n               : null\r\n          }\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardCmp;\r\n","import axios from 'axios'\r\nimport React from 'react'\r\nimport { Navbar , Nav} from \"react-bootstrap\"\r\nimport { useHistory } from 'react-router'\r\nimport { BASE_URI } from '../../core'\r\nconst NavbarApp = ({icon, changeTheme}) => {\r\n  const history = useHistory()\r\n  const logout =()=>{\r\n      \r\n      axios.post(`${BASE_URI}/api/v1/logout` , {},{withCredentials : true})\r\n      .then(res=>console.log( \"LOGOUT\",res))\r\n      .catch(err=>console.log(err))\r\n      localStorage.removeItem(\"data\")\r\n      history.replace('/')\r\n  }\r\n  const profile =()=>{\r\n    history.replace('/profile')\r\n}\r\nconst home =()=>{\r\n  history.replace('/dashboard')\r\n}\r\n\r\n  return (\r\n        <div>\r\n            <Navbar style={{backgroundColor : \"#09DEEA\"}} expand=\"lg\">\r\n  <Navbar.Brand href=\"#home\">Carrier <del>Carrer</del> </Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"ml-auto\">\r\n      \r\n      <Nav.Link href=\"javascript:void()\">\r\n        <i className={icon} onClick={()=>changeTheme()} ></i>\r\n      </Nav.Link>\r\n      <Nav.Link href=\"javascript:void()\" onClick={()=>home()}>\r\n        Home\r\n        </Nav.Link>\r\n      <Nav.Link href=\"javascript:void()\" onClick={()=>profile()}>Profile</Nav.Link>\r\n      <Nav.Link href=\"javascript:void()\" style={{width:\"80px\"}} className=\"bg bg-dark text-center rounded text-white\" onClick={()=>logout()}>\r\n        \r\n        Logout\r\n        \r\n        </Nav.Link>\r\n  \r\n    </Nav>\r\n    \r\n  </Navbar.Collapse>\r\n</Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavbarApp\r\n","import * as React from 'react';\r\nimport Switch from '@mui/material/Switch';\r\n\r\nconst label = { inputProps: { 'aria-label': 'Switch demo' } };\r\n\r\nexport default function SwitchesSize({ checkHandle, setCheckHandle }) {\r\n\r\n    return (\r\n    <div className=\"mr-auto\">\r\n      <Switch {...label} checked={checkHandle} onChange={()=>setCheckHandle(!checkHandle)} size=\"small\" />\r\n        <small>Private</small>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport CardCmp from \"../Components/DashBoardCmp/CardCmp\";\r\nimport NavbarApp from \"../Components/DashBoardCmp/Navbar\";\r\nimport styles from \"./Dashboard.module.css\";\r\nimport axios from \"axios\"\r\nimport {BASE_URI} from \"../core\"\r\nimport SwitchesSize from \"../Components/Switch\"\r\nimport SplashScreen from \"../Screen/SplashScreen\"\r\n\r\nconst DashboardScreen = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"data\")));\r\n  const [indexNum, setIndexNum] = useState(null);\r\n  const [postSend ,setPostSend] = useState(false);\r\n  const [checkHandle , setCheckHandle] = useState(false)\r\n  const [icon , setIcon] = useState(\"fas fa-sun\")\r\n  const [darkTheme , setDarkTheme] = useState(false)\r\n  const [loadIsMore , setLoadIsMore] = useState(false)\r\n  // console.log(checkHandle)\r\n  // console.log(\"index =>>\" ,indexNum)\r\n  // console.log(user);\r\n  \r\n    useEffect(async ()=>{\r\n        await axios.get(`${BASE_URI}/api/v1/post?page=0` , {\r\n        withCredentials : true\r\n\r\n        })\r\n        .then(res=>{\r\n            console.log(res.data)\r\n            setPost([...res.data])\r\n        })\r\n        .catch(err=>{\r\n          console.log(err)\r\n        })\r\n    } , [postSend])\r\n  const [post, setPost] = useState([]);\r\n\r\n  // console.log(post);\r\n  // console.log('post arhi hai , ' + )\r\n\r\n  const addPost =async () => {\r\n    const postObj = {\r\n        userName: `${user.firstName} ${user.lastName}`,\r\n        postCapture: inputValue,\r\n        date: new Date().toLocaleDateString(),\r\n        userId : user._id,\r\n        privatePost : checkHandle\r\n    }\r\n    await axios.post(`${BASE_URI}/api/v1/post` , postObj , {\r\n        withCredentials : true\r\n\r\n    } )\r\n    .then(res=>{\r\n      console.log(res)\r\n    })\r\n    .catch(err=>{\r\n      console.log(err)\r\n    })\r\n    setPostSend(!postSend)\r\n    // setPost([\r\n    //   ...post,\r\n    //   {\r\n    //     userName: user.firstName + user.lastName,\r\n    //     postCapture: inputValue,\r\n    //     date: new Date().toLocaleDateString(),\r\n    //     uid: user._id,\r\n    //   },\r\n    // ]);\r\n  };\r\n  const removeValue = () => {\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  const editPost = (ind , editValue)=>{\r\n    const postKey = {\r\n      uPostId : post[ind]._id\r\n      }\r\n    console.log(postKey)\r\n    axios.put(`${BASE_URI}/api/v1/post` , {postCap : editValue , uPostId : postKey.uPostId} ,{\r\n        withCredentials : true\r\n\r\n    } )\r\n    .then(res=>{\r\n      console.log(\"ress\" , res)\r\n    setPostSend(!postSend)\r\n\r\n    })\r\n    .catch(err=>{\r\n      console.log(err)\r\n    })\r\n    \r\n\r\n    // console.log(\"edit function\" , ind)\r\n        // post[ind].postCapture = editValue\r\n        // post[ind].date = new Date().toLocaleDateString()\r\n        // setPost([...post])\r\n    }\r\n\r\n   const deletePost = async (e)=>{\r\n    const postKey = {\r\n      uPostId :   post[e]._id\r\n    }   \r\n    console.log(postKey)\r\n    await axios.delete(`${BASE_URI}/api/v1/post/${postKey.uPostId}` , {\r\n        withCredentials : true\r\n\r\n    }  )\r\n      .then(res=>console.log(res))\r\n      .catch(err=>console.log(err))\r\n    setPostSend(!postSend)\r\n      \r\n            // console.log(\"deletePost\" , e)\r\n            // post.splice(e , 1)\r\n            // setPost([...post])\r\n   } \r\n   const changeTheme = ()=>{\r\n    if(!darkTheme){\r\n      setIcon(\"fas fa-moon\")\r\n       setDarkTheme(true)\r\n\r\n    }else{\r\n      setIcon(\"fas fa-sun\")\r\n      setDarkTheme(false)\r\n\r\n    }\r\n   }\r\n\r\n   const loadMore = ()=>{\r\n    console.log(\"l;oad\");\r\n      axios.get(`${BASE_URI}/api/v1/post?page=${post.length}` , {withCredentials : true})\r\n      .then(res=>{\r\n\r\n          if(res.data?.length){\r\n              const newPosts = [...post , ...res.data]\r\n              setPost(newPosts)\r\n            }else{\r\n                console.log(\"end hogayi length\");\r\n                setLoadIsMore(true)\r\n            }\r\n\r\n\r\n      })\r\n      .catch((err)=>{\r\n        console.log(err);\r\n      })\r\n\r\n   }\r\n  return (\r\n    <div className={`w-100 ${styles.dashBoardMainBox}`} style={{backgroundColor : darkTheme ? \"#343a40\" : '#E0EAFC' }} >\r\n      {/* <h1>Dashboard Screen</h1> */}\r\n      <NavbarApp icon={icon} changeTheme={changeTheme}/>\r\n  {  \r\n    post.length ?\r\n  <>\r\n      <div className={`${styles.postSectionBox}`}>\r\n        <div className={darkTheme? `${styles.postBox} ${styles.postBoxDark}` : styles.postBox }>\r\n          <section className={styles.postCardHeading}>\r\n            <p>Create Post</p>\r\n          </section>\r\n          <section className={styles.postInputBox}>\r\n            <textarea\r\n              cols=\"30\"\r\n              rows=\"3\"\r\n              value={inputValue}\r\n              onChange={(e) => setInputValue(e.target.value)}\r\n              placeholder=\"What's on your mind?\"\r\n              style={{color:darkTheme?\"white\" : \"black\"}}\r\n            ></textarea>\r\n          </section>\r\n          <section className={styles.postBtns}>\r\n            <SwitchesSize  checkHandle={checkHandle} setCheckHandle={setCheckHandle}/>\r\n            <button onClick={() => removeValue()} className={`btn btn-danger`}>\r\n              Remove\r\n            </button>\r\n            <button onClick={() => addPost()} className={`btn btn-primary`}>\r\n              POST\r\n            </button>\r\n          </section>\r\n        </div>\r\n      </div>\r\n\r\n      <section className=\"row m-0\">\r\n        {post.map((val, ind) => {\r\n            // console.log(val.privatePost)\r\n              \r\n              return (\r\n                  \r\n                    user._id === val.userId ?\r\n                    <div className=\"col-lg-3 col-md-6\">\r\n                  <CardCmp\r\n                    name={val.userName}\r\n                    ind={ind}\r\n                    date={val.date}\r\n                    postCap={val.postCapture}\r\n                    indexNum={indexNum}\r\n                    setIndexNum={setIndexNum}\r\n                    editPostFun={editPost}\r\n                    deletePost={deletePost}\r\n                    ownPost={true}\r\n                    privatePost={val.privatePost}  \r\n                    darkTheme={darkTheme} \r\n                  />\r\n                </div> : \r\n                 !val.privatePost ?\r\n                <div className=\"col-lg-3 col-md-6\">\r\n                <CardCmp\r\n                  name={val.userName}\r\n                  ind={ind}\r\n                  date={val.date}\r\n                  postCap={val.postCapture}\r\n                  indexNum={indexNum}\r\n                  setIndexNum={setIndexNum}\r\n                  editPostFun={editPost}\r\n                  deletePost={deletePost}\r\n                  ownPost={false}\r\n                  privatePost={val.privatePost}   \r\n                  darkTheme={darkTheme} \r\n\r\n                      \r\n                />  </div> : null  \r\n                  \r\n                \r\n              );  \r\n            \r\n          \r\n        })}\r\n        {!loadIsMore ? \r\n    <div className={styles.loadMoreBtnBox}>\r\n\r\n          <button className={styles.loadMoreBtn} onClick={()=>loadMore()}>Load More</button>\r\n\r\n  \r\n    </div> : null\r\n        }\r\n      </section>\r\n    </> : <SplashScreen />}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n","import React, { useState } from 'react'\r\nimport NavbarApp from '../Components/DashBoardCmp/Navbar'\r\nimport {useSelector} from \"react-redux\"\r\nimport styles from \"./ProfileScreen.module.css\"\r\nimport SplashScreen from './SplashScreen'\r\nimport { FaUserAlt } from 'react-icons/fa'\r\nimport { useHistory } from 'react-router'\r\nconst ProfileScreen = () => {\r\n    const [icon , setIcon] = useState(\"fas fa-sun\")\r\n    const [darkTheme , setDarkTheme] = useState(false)\r\n    const userData = useSelector(state => state.LoginReducer)\r\n    const history = useHistory()\r\n    console.log(\"PROFILE SCREEN\" , userData)\r\n    console.log(\"userData\" , userData);\r\n    const changeTheme = ()=>{\r\n        if(!darkTheme){\r\n          setIcon(\"fas fa-moon\")\r\n           setDarkTheme(true)\r\n    \r\n        }else{\r\n          setIcon(\"fas fa-sun\")\r\n          setDarkTheme(false)\r\n    \r\n        }\r\n       }\r\n    return (\r\n        <div>\r\n            <NavbarApp icon={icon} changeTheme={changeTheme}/>\r\n            \r\n            <section className={styles.profileMainBox} style={{backgroundColor : darkTheme ? \"#343a40\" : '#E0EAFC' , color : darkTheme ? \"white\" : \"black\"  }}>\r\n\r\n\r\n                   {userData?.emailAddress ?\r\n                    <div className={styles.profileBox}>\r\n                       \r\n                        <div className={styles.userNameHead} >\r\n                            <small>\r\n\r\n                            <FaUserAlt />\r\n                            </small>\r\n                            <h1>{userData.firstName}</h1>\r\n                        </div>\r\n\r\n                        <div className={styles.userDetails} >\r\n                            <ul>\r\n\r\n                            <li>\r\n                                <small>First Name :</small>\r\n                                {userData.firstName}</li>\r\n                            <li>\r\n                            <small>Last Name  :</small>\r\n                            {userData.lastName}</li>\r\n                            <li>\r\n                            <small>Email Address :</small>\r\n                                \r\n                                {userData.emailAddress} </li>\r\n                            <li>\r\n                            <small>Password : </small>\r\n\r\n                            {userData.password}</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className={styles.profilebtns}>\r\n\r\n                        <button className={styles.profilebtnsFC} onClick={()=>history.push(\"/\")}>Dashboard</button>\r\n                        <button className={styles.profilebtnsLC}>Edit</button>\r\n\r\n                        </div>\r\n\r\n                    </div> :\r\n                        <SplashScreen /> \r\n                            \r\n\r\n}\r\n\r\n            </section>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import React, { useEffect } from 'react'\r\nimport SignUpScreen from './Screen/SignUpScreen'\r\nimport \"./maincssFile.css\"\r\nimport PrivateRoute from \"./config/routes\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport LogIn from './Screen/LogIn';\r\nimport  DashboardScreen from \"./Screen/DashboardScreen\"\r\nimport ProfileScreen from './Screen/ProfileScreen';\r\nimport axios from 'axios';\r\nimport { BASE_URI } from './core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { LoginActions } from './Redux';\r\nconst App = () => {\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(async () => {\r\n        await axios.get(`${BASE_URI}/api/v1/profile` , {withCredentials : true})\r\n        .then(res=>{\r\n            console.log(\"hello\",res)\r\n            dispatch(LoginActions.LoginAction(res.data))\r\n        })\r\n        .catch(err=>console.log(err))\r\n        console.log(\"HELLO WORLD\");\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Router>\r\n\r\n\r\n\r\n                <Switch>\r\n        \r\n                <Route  path=\"/signup\"  component={SignUpScreen} />\r\n                \r\n                \r\n                <Route exact path=\"/\" component={LogIn} />\r\n                \r\n                <PrivateRoute component={DashboardScreen} exact path=\"/dashboard\" />\r\n                \r\n                <PrivateRoute component={ProfileScreen} exact path=\"/profile\" />\r\n\r\n                <Route  path=\"*\">\r\n                    <Redirect to=\"/\" />\r\n                </Route>\r\n                {/* <Route exact path=\"/dashboard\" component={DashboardScreen} /> */}\r\n            \r\n            </Switch>\r\n            </Router>\r\n                \r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const INITIAL_STATE = {\r\n        user : undefined    \r\n}\r\n\r\nexport const  LoginReducer   = (state = INITIAL_STATE , action)=>{\r\n\r\n            if(action.type === \"USER LOGIN\"){\r\n                return state = action.payload \r\n            }else{\r\n                return state\r\n            }\r\n\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport {LoginReducer} from \"./reducer\"\r\n\r\n\r\nconst reducers = combineReducers({\r\n    LoginReducer : LoginReducer\r\n})\r\n\r\nexport default reducers ","import { applyMiddleware, createStore } from \"redux\";\r\nimport reducers from \"./Reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store  = createStore(reducers , {} , applyMiddleware(thunk))\r\nexport default  store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport store from \"./Redux/store\"\r\nimport { Provider } from 'react-redux';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      \r\n      <App />\r\n\r\n    </Provider>\r\n      \r\n\r\n\r\n    \r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashBoardMainBox\":\"Dashboard_dashBoardMainBox__37JIm\",\"postSectionBox\":\"Dashboard_postSectionBox__d6u-E\",\"postBox\":\"Dashboard_postBox__2wxwa\",\"postBoxDark\":\"Dashboard_postBoxDark__2jvHx\",\"postCardHeading\":\"Dashboard_postCardHeading__xV3ee\",\"postInputBox\":\"Dashboard_postInputBox__2LrPp\",\"postBtns\":\"Dashboard_postBtns__A4ndy\",\"loadMoreBtnBox\":\"Dashboard_loadMoreBtnBox__2q4SN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardMainBox\":\"CardCmp_cardMainBox__2sUuw\",\"cardMainBoxDark\":\"CardCmp_cardMainBoxDark__2Gauc\",\"cardHeader\":\"CardCmp_cardHeader__3cJjZ\",\"iconBOx\":\"CardCmp_iconBOx__2LKI7\",\"cardBody\":\"CardCmp_cardBody__1DAHn\",\"cardFooter\":\"CardCmp_cardFooter__2_1sQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileMainBox\":\"ProfileScreen_profileMainBox__124q3\",\"profileBox\":\"ProfileScreen_profileBox__32-gX\",\"userNameHead\":\"ProfileScreen_userNameHead__kQ_IT\",\"userDetails\":\"ProfileScreen_userDetails__3Q49p\",\"profilebtns\":\"ProfileScreen_profilebtns__33Evj\",\"profilebtnsFC\":\"ProfileScreen_profilebtnsFC__1BnpS\",\"profilebtnsLC\":\"ProfileScreen_profilebtnsLC__iEE-7\"};"],"sourceRoot":""}